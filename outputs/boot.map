
Memory Configuration

Name             Origin             Length             Attributes
RAM              0x20000000         0x00009000         xrw
FLASH            0x08000000         0x00020000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD outputs/main.o
LOAD outputs/myStartUp.o
                0x20009000                        _top_of_ram_stack_start = (ORIGIN (RAM) + LENGTH (RAM))
                0x00000200                        _Min_Heap_Size = 0x200
                0x00000400                        _Min_Stack_Size = 0x400

.isr_vector     0x08000000       0xbc
                0x08000000                        . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x08000000       0xbc outputs/myStartUp.o
                0x08000000                vector_table
                0x080000bc                        . = ALIGN (0x4)

.text           0x080000bc       0xc8
                0x080000bc                        . = ALIGN (0x4)
 *(.text)
 .text          0x080000bc       0x40 outputs/main.o
                0x080000bc                main
 .text          0x080000fc       0x88 outputs/myStartUp.o
                0x080000fc                Reset_Handler
                0x0800017c                USART3_4_LPUART1_IRQHandler
                0x0800017c                DebugMon_Handler
                0x0800017c                TIM1_CC_IRQHandler
                0x0800017c                HardFault_Handler
                0x0800017c                ADC1_COMP_IRQHandler
                0x0800017c                SysTick_Handler
                0x0800017c                PVD_IRQHandler
                0x0800017c                PendSV_Handler
                0x0800017c                NMI_Handler
                0x0800017c                I2C1_IRQHandler
                0x0800017c                TIM7_LPTIM2_IRQHandler
                0x0800017c                RTC_TAMP_IRQHandler
                0x0800017c                UsageFault_Handler
                0x0800017c                SPI1_IRQHandler
                0x0800017c                EXTI2_3_IRQHandler
                0x0800017c                I2C2_IRQHandler
                0x0800017c                TIM17_IRQHandler
                0x0800017c                TIM16_IRQHandler
                0x0800017c                TIM3_IRQHandler
                0x0800017c                EXTI4_15_IRQHandler
                0x0800017c                RCC_IRQHandler
                0x0800017c                DMA1_Channel1_IRQHandler
                0x0800017c                Default_Handler
                0x0800017c                CEC_IRQHandler
                0x0800017c                TIM14_IRQHandler
                0x0800017c                TIM15_IRQHandler
                0x0800017c                EXTI0_1_IRQHandler
                0x0800017c                SPI2_IRQHandler
                0x0800017c                MemManage_Handler
                0x0800017c                SVC_Handler
                0x0800017c                TIM6_DAC_LPTIM1_IRQHandler
                0x0800017c                WWDG_IRQHandler
                0x0800017c                TIM2_IRQHandler
                0x0800017c                DMA1_Ch4_7_DMAMUX1_OVR_IRQHandler
                0x0800017c                DMA1_Channel2_3_IRQHandler
                0x0800017c                UCPD1_2_IRQHandler
                0x0800017c                USART2_IRQHandler
                0x0800017c                FLASH_IRQHandler
                0x0800017c                BusFault_Handler
                0x0800017c                USART1_IRQHandler
                0x0800017c                TIM1_BRK_UP_TRG_COM_IRQHandler
 *(.text*)
 *(.glue_7)
 .glue_7        0x08000184        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x08000184        0x0 linker stubs
                0x08000184                        . = ALIGN (0x4)

.vfp11_veneer   0x08000184        0x0
 .vfp11_veneer  0x08000184        0x0 linker stubs

.v4_bx          0x08000184        0x0
 .v4_bx         0x08000184        0x0 linker stubs

.iplt           0x08000184        0x0
 .iplt          0x08000184        0x0 outputs/main.o

.rodata         0x08000184       0x18
                0x08000184                        . = ALIGN (0x4)
 *(.rodata)
 .rodata        0x08000184       0x16 outputs/main.o
                0x08000184                dummy2
                0x08000188                pi
                0x0800018c                msg
 *(.rodata*)
                0x0800019c                        . = ALIGN (0x4)
 *fill*         0x0800019a        0x2 

.rel.dyn        0x0800019c        0x0
 .rel.iplt      0x0800019c        0x0 outputs/main.o

.data           0x20000000        0x4 load address 0x0800019c
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        _data = .
 *(.data)
 .data          0x20000000        0x4 outputs/main.o
                0x20000000                dummy1
 .data          0x20000004        0x0 outputs/myStartUp.o
 *(.data*)
                0x20000004                        . = ALIGN (0x4)
                0x20000004                        _edata = .
                0x0800019c                        _sidata = LOADADDR (.data)

.igot.plt       0x20000004        0x0 load address 0x080001a0
 .igot.plt      0x20000004        0x0 outputs/main.o

.bss            0x20000004       0x2c load address 0x080001a0
                0x20000004                        . = ALIGN (0x4)
                0x20000004                        _bss = .
 *(.bss)
 .bss           0x20000004       0x2c outputs/main.o
                0x20000004                counter
                0x20000008                data
 .bss           0x20000030        0x0 outputs/myStartUp.o
 *(.bss*)
 *(COMMON)
                0x20000030                        . = ALIGN (0x4)
                0x20000030                        _ebss = .

._user_heap_stack
                0x20000030      0x600 load address 0x080001a0
                0x20000030                        . = ALIGN (0x8)
                [!provide]                        PROVIDE (end = .)
                [!provide]                        PROVIDE (_end = .)
                0x20000230                        . = (. + _Min_Heap_Size)
 *fill*         0x20000030      0x200 
                0x20000630                        . = (. + _Min_Stack_Size)
 *fill*         0x20000230      0x400 
                0x20000630                        . = ALIGN (0x8)
OUTPUT(outputs/boot.elf elf32-littlearm)
LOAD linker stubs

.debug_info     0x00000000      0x306
 .debug_info    0x00000000      0x17f outputs/main.o
 .debug_info    0x0000017f      0x187 outputs/myStartUp.o

.debug_abbrev   0x00000000      0x1cb
 .debug_abbrev  0x00000000       0xce outputs/main.o
 .debug_abbrev  0x000000ce       0xfd outputs/myStartUp.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 outputs/main.o
 .debug_aranges
                0x00000020       0x20 outputs/myStartUp.o

.debug_line     0x00000000      0x2ad
 .debug_line    0x00000000      0x12d outputs/main.o
 .debug_line    0x0000012d      0x180 outputs/myStartUp.o

.debug_str      0x00000000      0x1aa
 .debug_str     0x00000000      0x122 outputs/main.o
                                0x169 (size before relaxing)
 .debug_str     0x00000122       0x88 outputs/myStartUp.o
                                0x1be (size before relaxing)

.comment        0x00000000       0x43
 .comment       0x00000000       0x43 outputs/main.o
                                 0x44 (size before relaxing)
 .comment       0x00000043       0x44 outputs/myStartUp.o

.ARM.attributes
                0x00000000       0x2c
 .ARM.attributes
                0x00000000       0x2c outputs/main.o
 .ARM.attributes
                0x0000002c       0x2c outputs/myStartUp.o

.debug_frame    0x00000000       0x7c
 .debug_frame   0x00000000       0x30 outputs/main.o
 .debug_frame   0x00000030       0x4c outputs/myStartUp.o
